<launch>

	<node pkg="dn_object_detect" type="dn_object_detect" name="dn_object_detect" output="screen">
		<param name="_image_transport" type="str" value="raw"/>
		<param name="camera" type="str" value="/videofile/image_raw"/>
		<param name="yolo_config" type="str" value="/home/n800s/catkin_ws/src/dn_object_detect/data/yolo-tiny.cfg"/>
		<param name="yolo_model" type="str" value="/home/n800s/catkin_ws/src/dn_object_detect/data/yolo-tiny.weights"/>
		<param name="threshold" type="double" value="0.2"/>
	</node>

	<!-- launch video stream -->
	<include file="$(find video_stream_opencv)/launch/camera.launch" >
	 		<!-- node name and ros graph name -->
			<arg name="camera_name" value="videofile" />
			<!-- full path to the video file -->
			<arg name="video_stream_provider" value="/home/n800s/install/darknet/play.avi" />
			<!-- throttling the querying of frames to -->
			<arg name="fps" value="5" />
			<!-- setting frame_id -->
			<arg name="frame_id" value="videofile_frame" />
			<!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
			"file:///$(find your_camera_package)/config/your_camera.yaml" -->
			<arg name="camera_info_url" value="" />
			<!-- flip the image horizontally (mirror it) -->
			<arg name="flip_horizontal" value="false" />
			<!-- flip the image vertically -->
			<arg name="flip_vertical" value="false" />
			<!-- visualize on an image_view window the stream generated -->
			<arg name="visualize" value="false" />
	</include>

</launch>



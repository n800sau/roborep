<launch>

	<!-- Worker threads for the nodelet manager -->
	<arg name="num_worker_threads" default="4" />
	<arg name="launch_prefix" default="gdb -ex run --args" />

	<node name="master_sync_rpi3" pkg="master_sync_fkie" type="master_sync" respawn="true">
	</node>

<!--
	<node name="master_discovery_rpi3" pkg="master_discovery_fkie" type="zeroconf" respawn="true">
	</node>
-->

	<node name="master_discovery_rpi3" pkg="master_discovery_fkie" type="master_discovery" respawn="true">
		<rosparam param="robot_hosts">[hubee, acer, radxa]</rosparam>
	</node>

	<arg name="namespace" value="rpi3" />

	<group ns="$(arg namespace)">

		<include file="$(find oculus_remnant)/launch/oculus_remnant.launch">
		</include>

		<include file="$(find oculus_remnant)/launch/description.launch">
		</include>


		<node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
			<remap from="image" to="/camera/depth/image_raw"/>
		</node>

		<include file="$(find openni2_launch)/launch/openni2.launch">
			<arg name="depth_registration"              value="true"/>
			<arg name="rgb_processing"                  value="true"/>
			<arg name="ir_processing"                   value="false"/>
			<arg name="depth_processing"                value="true"/>
			<arg name="depth_registered_processing"     value="true"/>
			<arg name="disparity_processing"            value="false"/>
			<arg name="disparity_registered_processing" value="false"/>
		</include>

		<include file="$(find rtabmap_ros)/launch/rtabmap.launch">
			<arg name="rgb_topic"               value="/$(arg namespace)/camera/rgb/image_rect_color" />
			<arg name="depth_topic"             value="/$(arg namespace)/camera/depth_registered/image_raw" />
			<arg name="camera_info_topic"       value="/$(arg namespace)/camera/rgb/camera_info" />
			<arg name="rviz" value="false"/>\
			<arg name="rtabmapviz" value="false"/>\
			<arg name="localization" value="false"/>\
<!--
			<remap from="/camera/rgb/camera_info" to="camera/rgb/camera_info"/>
-->
		</include>

		<node name="points2image" pkg="pcl_ros" type="convert_pointcloud_to_image">
			<remap from="input" to="/$(arg namespace)/camera/depth_registered/points"/>
			<remap from="output" to="/$(arg namespace)/camera/depth_registered/points/image_raw"/>
		</node>

		<include file="$(find rpi3_top)/launch/rpi3_top.launch">
		</include>

		<node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
			<param name="output_frame" value="odom_combined"/>
			<param name="base_footprint_frame" value="base_footprint"/>
			<param name="freq" value="30.0"/>
			<param name="sensor_timeout" value="1.0"/>	
			<param name="odom_used" value="true"/>
			<param name="imu_used" value="true"/>
			<param name="vo_used" value="false"/>
			<remap from="imu_data" to="imu"/>
			<remap from="odom" to="rtabmap/odom"/>
		</node>


<!--
			<node pkg="nodelet" type="nodelet" name="obstacles_detection" args="standalone rtabmap_ros/obstacles_detection">
				<remap from="cloud" to="/$(arg namespace)/camera/depth_registered/points"/>
				<param name="frame_id" type="string" value="base_link"/>
				<param name="map_frame_id" type="string" value="map"/>
				<param name="Grid/MinClusterSize" type="int" value="20"/>
				<param name="Grid/MaxObstacleHeight" type="double" value="0.0"/>
			</node>
-->

	</group>

</launch>




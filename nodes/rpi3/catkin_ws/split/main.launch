<launch>

	<!-- Worker threads for the nodelet manager -->
	<arg name="num_worker_threads" default="4" />

	<arg name="namespace" value="rpi3" />

	<group ns="$(arg namespace)">

		<arg name="rgb_topic"               default="/$(arg namespace)/camera/rgb/image_rect_color" />
		<arg name="depth_topic"             default="/$(arg namespace)/camera/depth_registered/image_raw" />
		<arg name="camera_info_topic"       default="/$(arg namespace)/camera/rgb/camera_info" />



		<node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
			<remap from="image" to="camera/depth/image_raw"/>
		</node>

<!--
		<node name="points2image" pkg="pcl_ros" type="convert_pointcloud_to_image">
			<remap from="input" to="/$(arg namespace)/camera/depth_registered/points"/>
			<remap from="output" to="/$(arg namespace)/camera/depth_registered/points/image_raw"/>
		</node>

		<node name="republish_points" type="republish" pkg="image_transport" output="screen"
			args="raw in:=/$(arg namespace)/camera/depth_registered/points/image_raw compressed out:=/$(arg namespace)/camera/depth_registered/points/image_raw"
		/>

		<node name="obstacles2image" pkg="pcl_ros" type="convert_pointcloud_to_image">
			<remap from="input" to="/$(arg namespace)/ground"/>
			<remap from="output" to="/$(arg namespace)/obstacles/image_raw"/>
		</node>

		<node name="republish_obstacles" type="republish" pkg="image_transport" output="screen"
			args="raw in:=/$(arg namespace)/obstacles/image_raw compressed out:=/$(arg namespace)/obstacles/image_raw"
		/>
-->

		<node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
			<param name="output_frame" value="odom_combined"/>
			<param name="base_footprint_frame" value="base_link"/>
			<param name="freq" value="20.0"/>
			<param name="sensor_timeout" value="1.0"/>	
			<param name="odom_used" value="true"/>
			<param name="imu_used" value="true"/>
			<param name="vo_used" value="false"/>
			<remap from="imu_data" to="imu"/>
			<remap from="odom" to="rf2o_laser_odometry/odom_rf2o"/>
		</node>

<!--
		<node pkg="nodelet" type="nodelet" name="obstacles_detection" args="standalone rtabmap_ros/obstacles_detection">
			<remap from="cloud" to="/$(arg namespace)/camera/depth_registered/points"/>
			<param name="frame_id" type="string" value="base_link"/>
			<param name="map_frame_id" type="string" value="map"/>
			<param name="wait_for_transform" type="bool" value="true"/>
			<param name="Grid/MinClusterSize" type="int" value="20"/>
			<param name="Grid/MaxObstacleHeight" type="double" value="0.0"/>
		</node>

		<node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
			<remap from="rgb/image"       to="$(arg rgb_topic)"/>
			<remap from="depth/image"     to="$(arg depth_topic)"/>
			<remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
			<remap from="odom" to="rtabmap/odom"/>

			<param name="frame_id" type="string" value="base_link"/>
			<param name="publish_tf" type="bool" value="false"/>
		</node>
-->

	<node pkg="rf2o_laser_odometry" type="rf2o_laser_odometry_node" name="rf2o_laser_odometry" output="screen">
		<param name="laser_scan_topic" value="/$(arg namespace)/scan"/> # topic where the lidar scans are being published
		<param name="odom_topic" value="odom_rf2o" /> # topic where tu publish the odometry estimations
		<param name="publish_tf" value="false" />  # wheter or not to publish the tf::transform (base->odom)
		<param name="base_frame_id" value="base_link"/> # frame_id (tf) of the mobile robot base. A tf transform from the laser_frame to the base_frame is mandatory
		<param name="odom_frame_id" value="odom" /> # frame_id (tf) to publish the odometry estimations
		<param name="init_pose_from_topic" value="" /> # (Odom topic) Leave empty to start at point (0,0)
		<param name="freq" value="6.0"/> # Execution frequency.
		<param name="verbose" value="true" /> # verbose
	</node>


		<node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">
			<param name="map_update_interval" value="5.0"/>
			<param name="maxUrange" value="16.0"/>
			<param name="sigma" value="0.05"/>
			<param name="kernelSize" value="1"/>
			<param name="lstep" value="0.05"/>
			<param name="astep" value="0.05"/>
			<param name="iterations" value="5"/>
			<param name="lsigma" value="0.075"/>
			<param name="ogain" value="3.0"/>
			<param name="lskip" value="0"/>
			<param name="srr" value="0.1"/>
			<param name="srt" value="0.2"/>
			<param name="str" value="0.1"/>
			<param name="stt" value="0.2"/>
			<param name="linearUpdate" value="1.0"/>
			<param name="angularUpdate" value="0.5"/>
			<param name="temporalUpdate" value="3.0"/>
			<param name="resampleThreshold" value="0.5"/>
			<param name="particles" value="30"/>
			<param name="xmin" value="-20.0"/>
			<param name="ymin" value="-20.0"/>
			<param name="xmax" value="20.0"/>
			<param name="ymax" value="20.0"/>
			<param name="delta" value="0.01"/>
			<param name="llsamplerange" value="0.01"/>
			<param name="llsamplestep" value="0.01"/>
			<param name="lasamplerange" value="0.005"/>
			<param name="lasamplestep" value="0.005"/>
			<param name="odom_frame" value="odom_combined"/>
			<param name="base_frame" value="base_link"/>
		</node>

	</group>

</launch>



